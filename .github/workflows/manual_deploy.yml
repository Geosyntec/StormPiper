name: Deployment

on:
  workflow_run:
    workflows: ["Build and Push Image to GCR"]
    types:
      - completed

  workflow_dispatch:
    inputs:
      tag:
        description: "Deploy Production with this version tag. If empty, restart development and pull 'latest' tag"
  
env:
  GKE_CLUSTER: tacoma-cluster
  GKE_REGION: us-west1
  PRODUCTION_TAG: ${{ github.event.inputs.tag }}
  
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      # Alternative option - authentication via credentials json
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GKE_JSON_KEY }}'
      
      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        
      # Get the GKE credentials so we can deploy to the cluster
      - name: Set up GKE credentials
        run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --region "$GKE_REGION"
               
      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          if [[ $PRODUCTION_TAG ]]
          then
            echo "Deploying to Production Application: $PRODUCTION_TAG"
            kubectl set image deployment/stormpiper-prod stormpiper=gcr.io/tacoma-app/stormpiper-pod:$PRODUCTION_TAG
            kubectl set image deployment/beat-prod beat=gcr.io/tacoma-app/bg_worker:$PRODUCTION_TAG
            kubectl set image deployment/worker-prod worker=gcr.io/tacoma-app/bg_worker:$PRODUCTION_TAG
            kubectl set image deployment/redis-prod redis=gcr.io/tacoma-app/redis:$PRODUCTION_TAG
          else
            echo "Deploying to development Application"
            kubectl rollout restart deploy --selector=app=stormpiper-dev
          fi
