"""refactor npv tables

Revision ID: f4bc4f04ff46
Revises: dad2431afc66
Create Date: 2023-01-27 10:29:20.078876

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "f4bc4f04ff46"
down_revision = "dad2431afc66"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.execute("DROP VIEW IF EXISTS tmnt_v")

    # op.alter_column("tmnt_facility", "node_id", nullable=False, unique=True)

    op.rename_table("tmnt_facility_attributes", "tmnt_facility_attribute")
    op.drop_column("tmnt_facility_attribute", "capital_cost")
    op.drop_column("tmnt_facility_attribute", "om_cost_per_yr")
    op.drop_column("tmnt_facility_attribute", "lifespan_yrs")
    op.drop_column("tmnt_facility_attribute", "replacement_cost")
    op.drop_column("tmnt_facility_attribute", "net_present_value")

    op.add_column(
        "tmnt_facility_attribute",
        sa.Column("node_id", sa.String(), nullable=True),
    )
    op.execute("UPDATE tmnt_facility_attribute SET node_id = COALESCE(node_id, altid);")

    op.create_table(
        "tmnt_facility_cost",
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_by", sa.String(), nullable=True),
        sa.Column("node_id", sa.String(), nullable=False),
        sa.Column("capital_cost", sa.Float(), nullable=True),
        sa.Column("om_cost_per_yr", sa.Float(), nullable=True),
        sa.Column("lifespan_yrs", sa.Float(), nullable=True),
        sa.Column("replacement_cost", sa.Float(), nullable=True),
        sa.Column("net_present_value", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("node_id"),
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.rename_table("tmnt_facility_attribute", "tmnt_facility_attributes")

    op.add_column(
        "tmnt_facility_attributes",
        sa.Column("capital_cost", sa.Float(), nullable=True),
    )
    op.add_column(
        "tmnt_facility_attributes",
        sa.Column("om_cost_per_yr", sa.Float(), nullable=True),
    )
    op.add_column(
        "tmnt_facility_attributes",
        sa.Column("lifespan_yrs", sa.Float(), nullable=True),
    )
    op.add_column(
        "tmnt_facility_attributes",
        sa.Column("replacement_cost", sa.Float(), nullable=True),
    )
    op.add_column(
        "tmnt_facility_attributes",
        sa.Column("net_present_value", sa.Float(), nullable=True),
    )

    op.execute(
        """
        DROP VIEW IF EXISTS tmnt_v;
        CREATE OR REPLACE VIEW tmnt_v AS
        select
            t."altid",
            t."node_id",
            t."commonname",
            t."facilitytype",
            t."facilitydetail",
            t."flowcontrol",
            t."infiltrated",
            t."waterquality",
            t."flowcontroltype",
            t."waterqualitytype",
            t."geom",
            ta."time_created",
            ta."time_updated",
            ta."updated_by",
            ta."basinname",
            ta."subbasin",
            ta."facility_type",
            ta."hsg",
            ta."design_storm_depth_inches",
            ta."tributary_area_tc_min",
            ta."total_volume_cuft",
            ta."area_sqft",
            ta."inf_rate_inhr",
            ta."retention_volume_cuft",
            ta."media_filtration_rate_inhr",
            ta."minimum_retention_pct_override",
            ta."treatment_rate_cfs",
            ta."depth_ft",
            ta."captured_pct",
            ta."retained_pct",
            ta."capital_cost",
            ta."om_cost_per_yr",
            ta."lifespan_yrs",
            ta."replacement_cost",
            ta."net_present_value"
        from tmnt_facility as t JOIN tmnt_facility_attributes as ta on t.altid = ta.altid
        """
    )

    # op.alter_column("tmnt_facility", "node_id", nullable=True, unique=False)

    op.drop_column("tmnt_facility_attributes", "node_id")

    op.drop_table("tmnt_facility_cost")

    # ### end Alembic commands ###
