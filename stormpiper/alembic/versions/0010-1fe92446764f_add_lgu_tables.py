"""add lgu tables

Revision ID: 1fe92446764f
Revises: 8d81894d08e1
Create Date: 2022-07-01 15:33:51.841602

"""
import sqlalchemy as sa
from alembic import op
from geoalchemy2 import Geometry

# revision identifiers, used by Alembic.
revision = "1fe92446764f"
down_revision = "8d81894d08e1"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_geospatial_table(  # type: ignore
        "lgu_boundary",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("altid", sa.String(), nullable=True),
        sa.Column("relid", sa.String(), nullable=True),
        sa.Column("node_id", sa.String(), nullable=True),
        sa.Column("subbasin", sa.String(), nullable=True),
        sa.Column("basinname", sa.String(), nullable=True),
        sa.Column(
            "geom",
            Geometry(
                srid=2927,
                spatial_index=False,
                from_text="ST_GeomFromEWKT",
                name="geometry",
            ),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_geospatial_index(  # type: ignore
        "idx_lgu_boundary_geom",
        "lgu_boundary",
        ["geom"],
        unique=False,
        postgresql_using="gist",
        postgresql_ops={},
    )
    op.create_table(
        "lgu_load",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("node_id", sa.String(), nullable=True),
        sa.Column("epoch", sa.String(), nullable=True),
        sa.Column("variable", sa.String(), nullable=True),
        sa.Column("value", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("lgu_load")
    op.drop_geospatial_index(  # type: ignore
        "idx_lgu_boundary_geom",
        table_name="lgu_boundary",
        postgresql_using="gist",
        postgresql_ops={},
        column_name="geom",
    )
    op.drop_geospatial_table("lgu_boundary")  # type: ignore
    # ### end Alembic commands ###
